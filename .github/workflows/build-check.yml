name: Build Check

on:
  push:
    branches: ["**"]
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: read

jobs:
  Unittest:
    name: Unit Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go: [1.24.7, 1.25.1]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
          cache: false

      - run: mkdir -p reports

      - name: "Clean Cache"
        run: go clean -cache -testcache -modcache

      - name: Execute test
        run: |
          go test -mod=readonly -run '^Test([^R].*|R[^a].*|Ra[^c].*|Rac[^e].*)' \
              -coverpkg=./... \
              -coverprofile=reports/coverage.out \
              -v ./... >reports/unittest.txt

      - name: Coverage Percentage
        run: go tool cover -func=reports/coverage.out

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Go test artifacts for build ${{ github.run_number }} in ocpp16messages
          path: reports
          retention-days: 1

  Golangci-lint:
    name: Golangci-lint
    runs-on: ubuntu-latest
    needs: Unittest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: 1.25
          cache: false

      - run: mkdir -p .reports

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8.0.0
        with:
          version: v2.1
          args: --config golangci.yml --timeout=5m ./...

      - name: Report
        run: cat reports/golangci-lint.txt

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Golint-CI artifacts for build ${{ github.run_number }} in ocpp16messages
          include-hidden-files: true
          path: reports/

  staticcheck:
    name: staticcheck
    runs-on: ubuntu-latest
    needs: Golangci-lint
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: 1.25.1
          cache: false

      - uses: dominikh/staticcheck-action@v1
        with:
          version: "latest"

  vet:
    name: go vet
    runs-on: ubuntu-latest
    needs: Golangci-lint
    strategy:
      fail-fast: false
      matrix:
        go: [1.22.x, 1.25.x]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
          cache: false

      - run: go vet ./...
