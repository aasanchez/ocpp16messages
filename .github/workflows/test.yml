name: Test and Release

on:
  push:
    branches:
      - main    # Trigger on every commit to main
    tags:
      - 'v*'    # Trigger on tags like v1.0.0, v0.1.2, etc.

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true  # Enable Go module caching

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: v2.0
          args: --timeout=5m  # Add timeout to prevent hanging

  test:
    name: Run Tests and Collect Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24
          cache: false  # Enable Go module caching

      - name: Install Tools
        run: |
          go install github.com/jstemmer/go-junit-report/v2@latest
          go mod tidy

      - name: Run Tests with Coverage and Generate JUnit Report
        run: |
          mkdir -p test-results
          # Run tests once and capture both coverage and JUnit output
          go test -v -coverprofile=coverage.out ./... 2>&1 | tee test-output.log
          cat test-output.log | go-junit-report > test-results/junit.xml

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts
          path: |
            coverage.out
            test-results/
        if: always()

      - name: Upload to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.out
          fail_ci_if_error: false  # Avoid CI failure if Codecov upload fails

      - name: Upload to Codecov Test
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false  # Avoid CI failure if Codecov upload fails
