name: Build Stage
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "**"
jobs:
  Unittest:
    name: Unit Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: 1.25
          cache: false

      - run: mkdir -p reports

      - name: Execute test
        run: go test -mod=readonly -v -coverpkg=`go list -mod=readonly ./... | grep -v '/tests' | paste -sd ',' -` -coverprofile=reports/coverage.out -run '^Test' ./... >reports/test.txt

      - name: Coverage Percentage
        run: go tool cover -func=reports/coverage.out

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Go test artifacts for build ${{ github.run_number }} in ocpp16messages
          path: reports
          retention-days: 3

  Codecov:
    name: Codecov
    needs: Unittest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: 1.25
          cache: false

      - name: Install Tools
        run: |
          go install github.com/jstemmer/go-junit-report/v2@latest
          go mod tidy

      - uses: actions/download-artifact@v4
        with:
          name: Go test artifacts for build ${{ github.run_number }} in ocpp16messages
          path: reports

      - name: Produce JUnit report
        run: go-junit-report <reports/coverage.out >reports/xunit.xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: reports/coverage.out
          flags: unit
          slug: aasanchez/ocpp16messages
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

      - name: Upload JUnitReport to Codecov
        uses: codecov/test-results-action@v1
        with:
          flags: unit
          files: reports/xunit.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

  Golangci-lint:
    name: Golangci-lint
    runs-on: ubuntu-latest
    needs: Unittest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: 1.25
          cache: false

      - run: mkdir -p .reports

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.1
          args: --config golangci.yml --timeout=5m ./...

      - name: Report
        run: cat reports/golangci-lint.txt

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Golint-CI artifacts for build ${{ github.run_number }} in ocpp16messages
          include-hidden-files: true
          path: reports/

  staticcheck:
    name: staticcheck
    runs-on: ubuntu-latest
    needs: Golangci-lint
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: 1.25
          cache: false

      - name: Install stattickcheck
        run: |
          go install honnef.co/go/tools/cmd/staticcheck@latest
          go mod tidy

      - run: staticcheck

  vet:
    name: go vet
    runs-on: ubuntu-latest
    needs: Golangci-lint
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: 1.25
          cache: false

      - run: go vet ./...
